{
	"requestTemplates": [
		{
			"id": "base",
			"protocol": "${protocol}",
			"host": "${host}"
		},
		{
			"id": "json",
			"headers": {
				"content-type": "application/json"
			}
		},
		{
			"id": "form",
			"headers": {
				"content-type": "application/x-www-form-urlencoded"
			}
		},
		{
			"id": "adminAuthTokenHeader",
			"headers": {
				"authorization": "${adminAccessToken}"
			}
		},
		{
			"id": "nonAdminAuthTokenHeader",
			"headers": {
				"authorization": "${nonAdminAccessToken}"
			}
		},
		{
			"id": "authTokenHeader",
			"headers": {
				"authorization": "${accessToken}"
			}
		},
		{
			"id": "postClientBody",
			"body": {
				"email": "test@test.com",
				"clientId": "${testClientId}"
			}
		},
		{
			"id": "putClientBody",
			"body": {
				"email": "test@test.com",
				"clientId": "${testClientId}",
				"isConfirmed": true,
				"isAdmin": false
			}
		},
		{
			"id": "postConfigBody",
			"body": {
				"name": "${configName}",
				"value": "fnord",
				"associations": {
					"applications": [],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false
			}
		},
		{
			"id": "putConfigBody",
			"body": {
				"id": "${configId}",
				"name": "${configName}",
				"value": "fnord2",
				"associations": {
					"applications": [],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false,
				"owner": "${adminClientId}"
			}
		},
		{
			"id": "putInvalidConfigBody",
			"body": {
				"id": "${configId}",
				"name": "${configName}"
			}
		},
		{
			"id": "putNonExistentConfigBody",
			"body": {
				"id": "${nonExistentConfigId}",
				"name": "${configName}",
				"value": "fnord2",
				"associations": {
					"applications": [],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false,
				"owner": "${adminClientId}"
			}
		},
		{
			"id": "postInvalidConfigBody",
			"body": {
				"fnord": "unknown"
			}
		},
		{
			"id": "postEnvironmentConfigBody",
			"body": {
				"name": "${configName}",
				"value": "fnord",
				"associations": {
					"applications": [],
					"environments": ["production"]
				},
				"isActive": true,
				"isSensitive": false
			}
		},
		{
			"id": "postApplicationConfigBody",
			"body": {
				"name": "${configName}",
				"value": "fnord",
				"associations": {
					"applications": [{
						"name": "myapp",
						"versions": ["1.0.0"]
					}],
					"environments": []
				},
				"isActive": true,
				"isSensitive": false
			}
		}
		
	],






	"responseTemplates": [
		{
			"id": "json",
			"headers": {
				"content-type": "application/json"
			}
		},
		{
			"id": "errorBody",
			"body": {
				"code": { "$exists": true },
				"error": { "$exists": true }
			}
		},
		{
			"id": "createdClient",
			"statusCode": 201,
			"headers": {
				"location": { "$regex": "clients/${testClientId}" }
			}
		},
		{
			"id": "createdConfig",
			"statusCode": 201,
			"headers": {
				"location": { "$regex": "config/[0-9a-f]{24}" }
			}
		}
	],






	"setupAndTeardowns":[
		{
			"id": "getRandomClientId",
			"actions": [{
				"$set": {
					"testClientId": {
						"$random": {
							"type": "string",
							"length": 10
						}
					}
				}
			}]
		},
		{
			"id": "getRandomConfigName",
			"actions": [{
				"$set": {
					"configName": {
						"$random": {
							"type": "string",
							"length": 10
						}
					}
				}
			}]
		},
		{
			"id": "getTimestamp",
			"actions": [{
				"$set": {
					"timestamp": {
						"$now": {}
					}
				}
			}]
		},
		{
			"id": "getAdminSignature",
			"actions": [{
				"$set": {
					"adminSignature": {
						"$crypto": {
							"macType": "HMAC",
							"algorithm": "sha1",
							"data": "${adminClientId}:${timestamp}",
							"key": "${adminKey}",
							"encoding": "hex"
						}
					}
				}
			}]
		},
		{
			"id": "getNonAdminSignature",
			"actions": [{
				"$set": {
					"nonAdminSignature": {
						"$crypto": {
							"macType": "HMAC",
							"algorithm": "sha1",
							"data": "${nonAdminClientId}:${timestamp}",
							"key": "${nonAdminClientKey}",
							"encoding": "hex"
						}
					}
				}
			}]
		},
		{
			"id": "getAdminToken",
			"request": {
				"templates": ["base", "form"],
				"method": "POST",
				"resource": "/token",
				"body": {
					"grant_type": "client_credentials",
					"client_id": "${adminClientId}",
					"timestamp": "${timestamp}",
					"signature": "${adminSignature}"
				}
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"adminAccessToken": {
						"$extract": "body.access_token"
					}
				}
			}]
		},
		{
			"id": "createNonAdminClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "POST",
				"resource": "/clients",
				"body": {
					"email": "fnord@test.com",
					"clientId": "${nonAdminClientId}"
				}
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 201,
				"headers": {
					"location": { "$regex": "clients/${testClientId}" }
				}
			}
		},
		{
			"id": "getNonAdminClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/clients/${nonAdminClientId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"nonAdminClientKey": {
						"$extract": "body.sharedKey"
					}
				}
			}]
		},
		{
			"id": "getNonAdminToken",
			"request": {
				"templates": ["base", "form"],
				"method": "POST",
				"resource": "/token",
				"body": {
					"grant_type": "client_credentials",
					"client_id": "${nonAdminClientId}",
					"timestamp": "${timestamp}",
					"signature": "${nonAdminSignature}"
				}
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"actions": [{
				"$set": {
					"nonAdminAccessToken": {
						"$extract": "body.access_token"
					}
				}
			}]
		},
		{
			"id": "removeClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "removeNonAdminClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${nonAdminClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "createClient",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postClientBody"],
				"method": "POST",
				"resource": "/clients"
			},
			"expectedResponse": {
				"templates": ["json", "createdClient"]
			}
		},
		{
			"id": "createEnvironmentConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "createdConfig"]
			},
			"actions": [{
				"$set": {
					"configId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "createApplicationConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postApplicationConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "createdConfig"]
			},
			"actions": [{
				"$set": {
					"configId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}]
		},
		{
			"id": "removeConfig",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "verifyConfigCreated",
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			}
		}
	],






	"suiteSetup": [
		"getTimestamp",
		"getAdminSignature",
		"getAdminToken",
		"createNonAdminClient",
		"getNonAdminClient",
		"getNonAdminSignature",
		"getNonAdminToken"
	],






	"suiteTeardown": [
		"removeNonAdminClient"
	],







	"tests": [
		{
			"id": "createClient_Success",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postClientBody"],
				"method": "POST",
				"resource": "/clients"
			},
			"expectedResponse": {
				"templates": ["json", "createdClient"]
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "createClient-invalidData_BadRequest",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postClientBody"],
				"method": "POST",
				"resource": "/clients",
				"body": {
					"invalid": "data"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "invalid.*is not allowed" }
				}
			}
		},
		{
			"id": "createClient-missingData_BadRequest",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "POST",
				"resource": "/clients",
				"body": {
					"clientId": "${testClientId}"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "the value of email is not allowed to be undefined" }
				}
			}
		},
		{
			"id": "getClient_Success",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "getClient_NotFound",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},
		{
			"id": "updateClient_Success",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putClientBody"],
				"method": "PUT",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "updateClient-invalidData_BadRequest",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putClientBody"],
				"method": "PUT",
				"resource": "/clients/${testClientId}",
				"body": {
					"invalid": "data"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "invalid.*is not allowed" }
				}
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "updateClient-missingData_BadRequest",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "PUT",
				"resource": "/clients/${testClientId}",
				"body": {
					"email": "test@test.com"
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400,
				"body": {
					"message": { "$regex": "the value of clientId is not allowed to be undefined" }
				}
			},
			"teardown": ["removeClient"]
		},
		{
			"id": "updateClient_NotFound",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "PUT",
				"resource": "/clients/${testClientId}",
				"body": {
					"email": "test@test.com",
					"clientId": "${testClientId}",
					"isConfirmed": true,
					"isAdmin": false
				}
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},
		{
			"id": "removeClient_Success",
			"setup": ["getRandomClientId", "createClient"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"statusCode": 204
			}
		},
		{
			"id": "removeClient_NotFound",
			"setup": ["getRandomClientId"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "DELETE",
				"resource": "/clients/${testClientId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			}
		},
		{
			"id": "getEnvConfigById_Success",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "getConfigById_NotFound",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/0123456789abcdef01234567"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			},
			"teardown": []
		},
		{
			"id": "getConfigById_BadRequest",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/fnord"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": []
		},
		{
			"id": "getConfigById_Unauthorized",
			"setup": [],
			"request": {
				"templates": ["base", "json"],
				"method": "GET",
				"resource": "/config/0123456789abcdef01234567"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": []
		},
		{
			"id": "getConfigById_NonOwner_Success",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "nonAdminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "getAppConfigById_Success",
			"setup": ["getAdminToken", "getRandomConfigName", "createApplicationConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200,
				"body": {
					"id": "${configId}"
				}
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "createEnvironmentConfig_Success",
			"setup": ["getRandomConfigName"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postEnvironmentConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "createdConfig"]
			},
			"actions": [{
				"$set": {
					"configId": {
						"$replace": {
							"value": {
								"$extract": "headers.location"
							},
							"regex": "^.*/config/(.*)$",
							"replacement": "$1"
						}
					}
				}
			}],
			"teardown": ["verifyConfigCreated", "removeConfig"]
		},
		{
			"id": "createEnvironmentConfig_BadRequest",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "postInvalidConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": []
		},
		{
			"id": "createEnvironmentConfig_Unauthorized",
			"setup": ["getRandomConfigName"],
			"request": {
				"templates": ["base", "json", "postEnvironmentConfigBody"],
				"method": "POST",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": []
		},
		{
			"id": "updateConfigById_Success",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 204
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_BadRequest",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putInvalidConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigByMismatchedId_BadRequest",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/fnord"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 400
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_Unauthorized",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 401
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_Forbidden",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "nonAdminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 403
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateConfigById_NotFound",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putNonExistentConfigBody"],
				"method": "PUT",
				"resource": "/config/${nonExistentConfigId}"
			},
			"expectedResponse": {
				"templates": ["json", "errorBody"],
				"statusCode": 404
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "updateOwnerOfConfigById_Success",
			"setup": ["getRandomConfigName", "createEnvironmentConfig"],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader", "putConfigBody"],
				"method": "PUT",
				"resource": "/config/${configId}",
				"body": {
					"owner": "fnord"
				}
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 204
			},
			"teardown": ["removeConfig"]
		},
		{
			"id": "removeConfigById_Success"
		},
		{
			"id": "removeConfigById_NotFound"
		},
		{
			"id": "removeConfigById_Unauthorized"
		},
		{
			"id": "removeConfigById_Forbidden"
		},
		{
			"id": "getConfig_Success",
			"setup": [],
			"request": {
				"templates": ["base", "json", "adminAuthTokenHeader"],
				"method": "GET",
				"resource": "/config"
			},
			"expectedResponse": {
				"templates": ["json"],
				"statusCode": 200
			}
		},
		{
			"id": "getConfigByName_Success"
		},
		{
			"id": "getConfigByMultipleNames_Success"
		},
		{
			"id": "getConfigByAppAssociation_Success"
		},
		{
			"id": "getConfigByEnvAssociation_Success"
		},
		{
			"id": "getConfigByAssociations_Success"
		},
		{
			"id": "getConfigByIsActiveTrue_Success"
		},
		{
			"id": "getConfigByIsActiveFalse_Success"
		},
		{
			"id": "getConfigByNameAndAssociation_Success"
		},
		{
			"id": "getConfigByNonExistentName_Success"
		},
		{
			"id": "getConfigMalformedQueryStringParams_BadRequest"
		},
		{
			"id": "getConfigDuplicateQueryStringParams_BadRequest"
		},
		{
			"id": "getConfigUnrecognizedAssociation_BadRequest"
		}
	]
}